ImixsCrypt Private Server 
~~~~~~~~~~~~~~

 The ImixsCrypt-Private-Server is a web server running on your local machine. 
 This server proivdes a API to manage RSA Keys and a secure way for ecnrypting and 
 decrypting messages. 
 
 The ImixsCrypt-Private-Server provides a web interface to interact with the ImixsCrypt API.
 This web interface can be extended by your own.
 
 The ImixsCrypt-Private-Server should never run other than on localhost (127.0.0.1). This is 
 an important part of the privacy concept of ImixsCrypt. So to access the server you should
 use the IP Address of your local private network:
 
 {{{http://127.0.0.1:4040}http://127.0.0.1:4040}}
 
 
*The Key-Management
~~~~~~~~~~~~~~ 
 All keys managed by the ImixsCrypt Private Server are stored in the local server 
 directory /keys/. This directory contains your local private RSA key pair as also
 public keys from other users. 
 

*--------------*----------------------------------------------------------------* 
|| Directory   ||  Description                                                 ||
*--------------+----------------------------------------------------------------+
|/keys         | Contains the local key pair.                                   |
|              | id.rsa = private            									|
|              | id.rsa.pub = public key 										|
*--------------+----------------------------------------------------------------+
|/keys/public  | Contains public keys received from a imixs-crypt-public server |
|              | This kind of keys are not verified.  							|
|              | This means the identity could possibly have been corrupted. 	|
*--------------+----------------------------------------------------------------+
|/keys/trusted | Contains trusted public keys.                                	|
|              | You can copy a public key you trust her here.              	|
|              |                                                              	|
*--------------+----------------------------------------------------------------+
 
 To be sure to have a secure communication with other users you should copy a 
 trusted version of the public key into the /keys/trusted/ directory. 
 For example if you reciefe a local copy of the public key or you got the public 
 key through a secure pgp encrypted email. 
 
 
 
*The REST API
~~~~~~~~~~~~~~
 The ImixsCrypt-Private-Server provides a local REST API to manage the use of RSA private 
 and public keys. 
 To work with a local private RSA key which is password protected a client need to first
 start a new session. After a session was created the client can encrypt or decrypt messages 
 using a sessionId stored in a browser cookie.
 To open a new session for a specifiy identity a client can post the private key password. 
 The local server verifies the password and generates the sessionId. 
 The password and the sessionId used during a session are only stored in-memory.
 To close a session a client can post an empty password.  
  
*---------------------*----------*------------------------------------------* 
|| Resource URI       || Method  || Description                            ||
*---------------------+----------+------------------------------------------+
| /session/(identity) |GET       |Returns the local public key for a identity|
|                     |          |If no identity is provided the default identity will be used|
|                     |          |The default identity is stored in the 	|
|                     |          |properties and can be set with the POST method|
|                     |          |HTTP-202=no key found, HTTP-200=key found	|
*---------------------+----------+------------------------------------------+
| /session/(identity) |POST      |Posts a private key password and opens a  |
|                     |          |session for a specific identity.  		|
|                     |          |posting an empty key closes the session.  |
|                     |          |If no key-pair still exits and a password |
|                     |          |was provided then a new local key pair will be generated.      |
*---------------------+----------+---------------------------------------+
 
 Both methods return a KeyItem in JSON format containing the identity and the public key.
 
+----+ 	
"{"user":"test.user@imixs.org","key":"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCV2k6a+9Gvv5zkc9PrwcRtMsXf6ocqasdf14GnaYl3y9+6V7/csCd098f5kEdCowo\nNAOACpvQQ68KF85iFz79EiA0PWLHA1dfKtj9U7spORv3TjHJkoSjhm+D6wIDAQAB\n"}"
+----+ 

 The POST method automatically updates the property "default.identity" with the 
 identity provided in the request. 
   
 

 
*Property Management
~~~~~~~~~~~~~~
 The Rest API provides a way to read and set properties into the local property file.
 A valid session must be opened before. 
  
*---------------------*----------*------------------------------------------* 
|| Resource URI       || Method  || Description                            ||
*---------------------+----------+------------------------------------------+
| /session/properties/(key) |GET       |Returns the value of a property|
*---------------------+----------+------------------------------------------+
| /session/properties/(key) |POST      |Set a new value of a property |
*---------------------+----------+---------------------------------------+
 